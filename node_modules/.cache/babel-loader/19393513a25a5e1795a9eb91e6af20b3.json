{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/pages/CustomerPage.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TheForm from \"../containers/TheForm\";\nimport UserKit from \"../data/UserKit\";\nimport { UserContext } from \"../UserContext\";\nimport styled from \"styled-components\";\nimport { StyledFormWrapper } from \"./Home\";\nimport Header from \"../containers/Header\";\nimport { StyledButton } from \"./SignUpLogin\"; // with the id set in props, customerpage fetches the customer and renders it on the page\n// the customer is saved to customer state (user), and on delete user.id is used to remove the user from the db\n// if editCustomer button is pressed, TheForm will be rendered with the customer settings, and customer to edit information\n\nconst CustomerPage = props => {\n  const history = useHistory();\n  const userKit = new UserKit();\n  const [customer, setCustomer] = useState({});\n  const [editCustomer, setEditCustomer] = useState(false);\n  const {\n    triggerListUpdate,\n    setTriggerListUpdate\n  } = useContext(UserContext);\n  useEffect(() => {\n    const id = props.match.params.id;\n    userKit.getCustomer(id).then(res => res.json()).then(data => setCustomer(data));\n  }, []);\n\n  const handleDelete = () => {\n    userKit.deleteCustomer(customer.id).then(() => setTriggerListUpdate(!triggerListUpdate));\n    history.push(\"/home\");\n  };\n\n  const handleEdit = () => {\n    setEditCustomer(!editCustomer);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, customer && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, customer.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, customer.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, customer.website)), /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"edit\"), /*#__PURE__*/React.createElement(StyledDeleteButton, {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"delete\"), editCustomer && /*#__PURE__*/React.createElement(StyledFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TheForm, {\n    submit: \"Edit customer\",\n    customerEdit: customer,\n    type: \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default CustomerPage;\nconst StyledDeleteButton = styled(StyledButton)`\n  background-color: #bc4242e4;\n  &:hover {\n  }\n`;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/pages/CustomerPage.jsx"],"names":["React","useContext","useEffect","useState","useHistory","TheForm","UserKit","UserContext","styled","StyledFormWrapper","Header","StyledButton","CustomerPage","props","history","userKit","customer","setCustomer","editCustomer","setEditCustomer","triggerListUpdate","setTriggerListUpdate","id","match","params","getCustomer","then","res","json","data","handleDelete","deleteCustomer","push","handleEdit","name","email","website","StyledDeleteButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAEA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,OAAO,GAAG,IAAIT,OAAJ,EAAhB;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM;AAAEiB,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA8CpB,UAAU,CAACM,WAAD,CAA9D;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,EAAE,GAAGT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACAP,IAAAA,OAAO,CACJU,WADH,CACeH,EADf,EAEGI,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSG,IAAD,IAAUZ,WAAW,CAACY,IAAD,CAH7B;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,YAAY,GAAG,MAAM;AACzBf,IAAAA,OAAO,CACJgB,cADH,CACkBf,QAAQ,CAACM,EAD3B,EAEGI,IAFH,CAEQ,MAAML,oBAAoB,CAAC,CAACD,iBAAF,CAFlC;AAGAN,IAAAA,OAAO,CAACkB,IAAR,CAAa,OAAb;AACD,GALD;;AAMA,QAAMC,UAAU,GAAG,MAAM;AACvBd,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,QAAQ,CAACkB,IAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,QAAQ,CAACmB,KAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,QAAQ,CAACoB,OAAb,CAHF,CAFJ,eAQE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEH,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEH,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAUGZ,YAAY,iBACX,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,OAAD;AACE,IAAA,MAAM,EAAC,eADT;AAEE,IAAA,YAAY,EAAEF,QAFhB;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,CADF;AAwBD,CAlDD;;AAoDA,eAAeJ,YAAf;AAEA,MAAMyB,kBAAkB,GAAG7B,MAAM,CAACG,YAAD,CAAe;;;;CAAhD","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport TheForm from \"../containers/TheForm\"\nimport UserKit from \"../data/UserKit\"\nimport { UserContext } from \"../UserContext\"\nimport styled from \"styled-components\"\nimport { StyledFormWrapper } from \"./Home\"\nimport Header from \"../containers/Header\"\nimport { StyledButton } from \"./SignUpLogin\"\n\n// with the id set in props, customerpage fetches the customer and renders it on the page\n// the customer is saved to customer state (user), and on delete user.id is used to remove the user from the db\n\n// if editCustomer button is pressed, TheForm will be rendered with the customer settings, and customer to edit information\n\nconst CustomerPage = (props) => {\n  const history = useHistory()\n  const userKit = new UserKit()\n  const [customer, setCustomer] = useState({})\n  const [editCustomer, setEditCustomer] = useState(false)\n\n  const { triggerListUpdate, setTriggerListUpdate } = useContext(UserContext)\n\n  useEffect(() => {\n    const id = props.match.params.id\n    userKit\n      .getCustomer(id)\n      .then((res) => res.json())\n      .then((data) => setCustomer(data))\n  }, [])\n\n  const handleDelete = () => {\n    userKit\n      .deleteCustomer(customer.id)\n      .then(() => setTriggerListUpdate(!triggerListUpdate))\n    history.push(\"/home\")\n  }\n  const handleEdit = () => {\n    setEditCustomer(!editCustomer)\n  }\n\n  return (\n    <div>\n      {customer && (\n        <div>\n          <p>{customer.name}</p>\n          <p>{customer.email}</p>\n          <p>{customer.website}</p>\n        </div>\n      )}\n      <StyledButton onClick={handleEdit}>edit</StyledButton>\n      <StyledDeleteButton onClick={handleDelete}>delete</StyledDeleteButton>\n      {editCustomer && (\n        <StyledFormWrapper>\n          {\n            <TheForm\n              submit=\"Edit customer\"\n              customerEdit={customer}\n              type=\"customer\"\n            />\n          }\n        </StyledFormWrapper>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerPage\n\nconst StyledDeleteButton = styled(StyledButton)`\n  background-color: #bc4242e4;\n  &:hover {\n  }\n`\n"]},"metadata":{},"sourceType":"module"}