{"ast":null,"code":"const ROOT_URL = \"https://frebi.willandskill.eu/\";\nexport default class {\n  async login(user) {\n    const url = `${ROOT_URL}api-token-auth/`;\n    const payload = user;\n    return fetch(url, {\n      method: \"POST\",\n      headers: this.getPublicHeaders(),\n      body: JSON.stringify(payload)\n    });\n  }\n\n  async activateUser(uid, token) {\n    const url = `${ROOT_URL}auth/users/activate`;\n    const payload = {\n      uid,\n      token\n    };\n    return fetch(url, {\n      method: \"POST\",\n      headers: this.getPublicHeaders(),\n      body: JSON.stringify(payload)\n    });\n  }\n\n  async register(user) {\n    const url = `${ROOT_URL}auth/users/`;\n    const payload = user;\n    return fetch(url, {\n      method: \"POST\",\n      headers: this.getPublicHeaders(),\n      body: JSON.stringify(payload)\n    });\n  }\n\n  async getCurrentUser(token) {\n    const url = `${ROOT_URL}v1/me/`;\n    fetch(url, {\n      method: \"GET\",\n      headers: this.getPrivateHeaders()\n    });\n  }\n\n  getPublicHeaders() {\n    return {\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n  getPrivateHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.getSessionToken()}`\n    };\n  }\n\n  setSessionToken(token) {\n    sessionStorage.setItem(\"sessionToken\", JSON.stringify(token));\n  }\n\n  getSessionToken() {\n    return JSON.parse(sessionStorage.getItem(\"sessionToken\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/data/UserKit.js"],"names":["ROOT_URL","login","user","url","payload","fetch","method","headers","getPublicHeaders","body","JSON","stringify","activateUser","uid","token","register","getCurrentUser","getPrivateHeaders","Authorization","getSessionToken","setSessionToken","sessionStorage","setItem","parse","getItem"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,gCAAjB;AAEA,eAAe,MAAM;AACnB,QAAMC,KAAN,CAAYC,IAAZ,EAAkB;AAChB,UAAMC,GAAG,GAAI,GAAEH,QAAS,iBAAxB;AACA,UAAMI,OAAO,GAAGF,IAAhB;AACA,WAAOG,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE,KAAKC,gBAAL,EAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAHU,KAAN,CAAZ;AAKD;;AACD,QAAMQ,YAAN,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AAC7B,UAAMX,GAAG,GAAI,GAAEH,QAAS,qBAAxB;AACA,UAAMI,OAAO,GAAG;AAAES,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAhB;AACA,WAAOT,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE,KAAKC,gBAAL,EAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAHU,KAAN,CAAZ;AAKD;;AACD,QAAMW,QAAN,CAAeb,IAAf,EAAqB;AACnB,UAAMC,GAAG,GAAI,GAAEH,QAAS,aAAxB;AACA,UAAMI,OAAO,GAAGF,IAAhB;AAEA,WAAOG,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE,KAAKC,gBAAL,EAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAHU,KAAN,CAAZ;AAKD;;AACD,QAAMY,cAAN,CAAqBF,KAArB,EAA4B;AAC1B,UAAMX,GAAG,GAAI,GAAEH,QAAS,QAAxB;AACAK,IAAAA,KAAK,CAACF,GAAD,EAAM;AACTG,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,OAAO,EAAE,KAAKU,iBAAL;AAFA,KAAN,CAAL;AAID;;AAEDT,EAAAA,gBAAgB,GAAG;AACjB,WAAO;AACL,sBAAgB;AADX,KAAP;AAGD;;AACDS,EAAAA,iBAAiB,GAAG;AAClB,WAAO;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAG,UAAS,KAAKC,eAAL,EAAuB;AAF3C,KAAP;AAID;;AACDC,EAAAA,eAAe,CAACN,KAAD,EAAQ;AACrBO,IAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCZ,IAAI,CAACC,SAAL,CAAeG,KAAf,CAAvC;AACD;;AACDK,EAAAA,eAAe,GAAG;AAChB,WAAOT,IAAI,CAACa,KAAL,CAAWF,cAAc,CAACG,OAAf,CAAuB,cAAvB,CAAX,CAAP;AACD;;AArDkB","sourcesContent":["const ROOT_URL = \"https://frebi.willandskill.eu/\"\n\nexport default class {\n  async login(user) {\n    const url = `${ROOT_URL}api-token-auth/`\n    const payload = user\n    return fetch(url, {\n      method: \"POST\",\n      headers: this.getPublicHeaders(),\n      body: JSON.stringify(payload),\n    })\n  }\n  async activateUser(uid, token) {\n    const url = `${ROOT_URL}auth/users/activate`\n    const payload = { uid, token }\n    return fetch(url, {\n      method: \"POST\",\n      headers: this.getPublicHeaders(),\n      body: JSON.stringify(payload),\n    })\n  }\n  async register(user) {\n    const url = `${ROOT_URL}auth/users/`\n    const payload = user\n\n    return fetch(url, {\n      method: \"POST\",\n      headers: this.getPublicHeaders(),\n      body: JSON.stringify(payload),\n    })\n  }\n  async getCurrentUser(token) {\n    const url = `${ROOT_URL}v1/me/`\n    fetch(url, {\n      method: \"GET\",\n      headers: this.getPrivateHeaders(),\n    })\n  }\n\n  getPublicHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n    }\n  }\n  getPrivateHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.getSessionToken()}`,\n    }\n  }\n  setSessionToken(token) {\n    sessionStorage.setItem(\"sessionToken\", JSON.stringify(token))\n  }\n  getSessionToken() {\n    return JSON.parse(sessionStorage.getItem(\"sessionToken\"))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}