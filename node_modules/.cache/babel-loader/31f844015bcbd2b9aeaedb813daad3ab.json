{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/containers/SignUpLoginForm.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../AuthContext\";\nimport Input from \"../components/Input\";\nimport SelectInput from \"../components/SelectInput\";\nimport FormKit from \"../data/FormKit\";\nimport UserKit from \"../data/UserKit\";\n\nconst SignUpLoginForm = ({\n  type\n}) => {\n  const userKit = new UserKit();\n  const formKit = new FormKit();\n  const history = useHistory();\n  const [fieldValues, setFieldValues] = useState();\n  const {\n    setCurrentUser\n  } = useContext(AuthContext); // depending on what type of form is requested\n  // initalUserState is set by the values collected from FormKit.js\n\n  useEffect(() => {\n    let form = formKit[type]();\n    let initialUserState = form.reduce((acc, cur) => {\n      return { ...acc,\n        [cur.name]: cur.options ? cur.options[0] : \"\"\n      };\n    }, {});\n    setFieldValues(initialUserState);\n  }, []);\n\n  const handleChange = (name, value) => {\n    setFieldValues(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    type === \"register\" && userKit.register(fieldValues);\n    type === \"login\" && userKit.login(fieldValues).then(res => console.log(res.status)).then(data => {// setCurrentUser(true)\n      // history.push(\"/\")\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, fieldValues && formKit[type]().map(field => {\n    if (field.type === \"input\") {\n      return /*#__PURE__*/React.createElement(Input, {\n        name: field.name,\n        label: field.name,\n        value: fieldValues[field.name],\n        handleChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      });\n    }\n\n    if (field.type === \"select\") {\n      return /*#__PURE__*/React.createElement(SelectInput, {\n        name: field.name,\n        label: field.name,\n        value: fieldValues[field.name],\n        handleChange: handleChange,\n        options: field.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      });\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, type));\n};\n\nexport default SignUpLoginForm;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/containers/SignUpLoginForm.jsx"],"names":["React","useContext","useState","useEffect","useHistory","AuthContext","Input","SelectInput","FormKit","UserKit","SignUpLoginForm","type","userKit","formKit","history","fieldValues","setFieldValues","setCurrentUser","form","initialUserState","reduce","acc","cur","name","options","handleChange","value","prevState","handleSubmit","e","preventDefault","register","login","then","res","console","log","status","data","map","field"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { AuthContext } from \"../AuthContext\"\nimport Input from \"../components/Input\"\nimport SelectInput from \"../components/SelectInput\"\nimport FormKit from \"../data/FormKit\"\nimport UserKit from \"../data/UserKit\"\n\nconst SignUpLoginForm = ({ type }) => {\n  const userKit = new UserKit()\n  const formKit = new FormKit()\n  const history = useHistory()\n  const [fieldValues, setFieldValues] = useState()\n  const { setCurrentUser } = useContext(AuthContext)\n\n  // depending on what type of form is requested\n  // initalUserState is set by the values collected from FormKit.js\n  useEffect(() => {\n    let form = formKit[type]()\n    let initialUserState = form.reduce((acc, cur) => {\n      return {\n        ...acc,\n        [cur.name]: cur.options ? cur.options[0] : \"\",\n      }\n    }, {})\n    setFieldValues(initialUserState)\n  }, [])\n\n  const handleChange = (name, value) => {\n    setFieldValues((prevState) => {\n      return {\n        ...prevState,\n        [name]: value,\n      }\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    type === \"register\" && userKit.register(fieldValues)\n    type === \"login\" &&\n      userKit\n        .login(fieldValues)\n        .then((res) => console.log(res.status))\n        .then((data) => {\n          // setCurrentUser(true)\n          // history.push(\"/\")\n        })\n  }\n\n  return (\n    <form>\n      {fieldValues &&\n        formKit[type]().map((field) => {\n          if (field.type === \"input\") {\n            return (\n              <Input\n                name={field.name}\n                label={field.name}\n                value={fieldValues[field.name]}\n                handleChange={handleChange}\n              ></Input>\n            )\n          }\n          if (field.type === \"select\") {\n            return (\n              <SelectInput\n                name={field.name}\n                label={field.name}\n                value={fieldValues[field.name]}\n                handleChange={handleChange}\n                options={field.options}\n              ></SelectInput>\n            )\n          }\n        })}\n      <button onClick={(e) => handleSubmit(e)}>{type}</button>\n    </form>\n  )\n}\n\nexport default SignUpLoginForm\n"]},"metadata":{},"sourceType":"module"}