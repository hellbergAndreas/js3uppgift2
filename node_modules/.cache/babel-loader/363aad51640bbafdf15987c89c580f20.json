{"ast":null,"code":"export default class {\n  constructor() {\n    this.email = {\n      name: \"email\",\n      input: \"input\",\n      required: true,\n      validateEmail: true,\n      type: \"input\"\n    };\n    this.password = {\n      name: \"password\",\n      input: \"input\",\n      required: true,\n      type: \"password\"\n    };\n    this.login = [this.email, this.password];\n    this.register = [{\n      name: \"firstName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"lastName\",\n      input: \"input\",\n      required: true\n    }, this.email, {\n      name: \"password\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationKind\",\n      input: \"select\",\n      required: true,\n      options: [1, 2, 3]\n    }];\n    this.customer = [{\n      name: \"name\",\n      label: \"name\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationNr\",\n      label: \"Organisation number\",\n      input: \"input\"\n    }, {\n      name: \"vatNr\",\n      label: \"Vat number\",\n      input: \"input\"\n    }, {\n      name: \"reference\",\n      label: \"Reference\",\n      input: \"input\"\n    }, {\n      name: \"paymentTerm\",\n      label: \"Payment term\",\n      input: \"input\",\n      required: true,\n      type: \"number\"\n    }, {\n      name: \"website\",\n      label: \"Website\",\n      input: \"input\"\n    }, this.email, {\n      name: \"phoneNumber\",\n      label: \"Phone number\",\n      input: \"input\"\n    }];\n\n    this.validate = (type, fieldValues, setErrorMessage) => {\n      let canSubmit = true;\n      const form = this[type];\n      form.forEach(field => {\n        if (field.validatePassword) {\n          return /\\S+@\\S+\\.\\S+/.test(field.email);\n        }\n\n        if (field.required && fieldValues[field.name].length === 0) {\n          canSubmit = false;\n          setErrorMessage(prevState => {\n            return { ...prevState,\n              [field.name]: \"this field is required\"\n            };\n          });\n        }\n      });\n      return canSubmit;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/data/FormKit.js"],"names":["email","name","input","required","validateEmail","type","password","login","register","options","customer","label","validate","fieldValues","setErrorMessage","canSubmit","form","forEach","field","validatePassword","test","length","prevState"],"mappings":"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","sourcesContent":["export default class {\n  email = {\n    name: \"email\",\n    input: \"input\",\n    required: true,\n    validateEmail: true,\n    type: \"input\",\n  }\n  password = {\n    name: \"password\",\n    input: \"input\",\n    required: true,\n    type: \"password\",\n  }\n\n  login = [this.email, this.password]\n\n  register = [\n    { name: \"firstName\", input: \"input\", required: true },\n    { name: \"lastName\", input: \"input\", required: true },\n    this.email,\n    { name: \"password\", input: \"input\", required: true },\n    { name: \"organisationName\", input: \"input\", required: true },\n    {\n      name: \"organisationKind\",\n      input: \"select\",\n      required: true,\n      options: [1, 2, 3],\n    },\n  ]\n\n  customer = [\n    { name: \"name\", label: \"name\", input: \"input\", required: true },\n    { name: \"organisationNr\", label: \"Organisation number\", input: \"input\" },\n    { name: \"vatNr\", label: \"Vat number\", input: \"input\" },\n    { name: \"reference\", label: \"Reference\", input: \"input\" },\n    {\n      name: \"paymentTerm\",\n      label: \"Payment term\",\n      input: \"input\",\n      required: true,\n      type: \"number\",\n    },\n    { name: \"website\", label: \"Website\", input: \"input\" },\n    this.email,\n    { name: \"phoneNumber\", label: \"Phone number\", input: \"input\" },\n  ]\n\n  validate = (type, fieldValues, setErrorMessage) => {\n    let canSubmit = true\n    const form = this[type]\n\n    form.forEach((field) => {\n      if (field.validatePassword) {\n        return /\\S+@\\S+\\.\\S+/.test(field.email)\n      }\n      if (field.required && fieldValues[field.name].length === 0) {\n        canSubmit = false\n        setErrorMessage((prevState) => {\n          return {\n            ...prevState,\n            [field.name]: \"this field is required\",\n          }\n        })\n      }\n    })\n\n    return canSubmit\n  }\n}\n"]},"metadata":{},"sourceType":"module"}