{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/pages/SignUpLogin.jsx\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SignUpLoginForm from \"../containers/SignUpLoginForm\";\nimport UserKit from \"../data/UserKit\";\n\nconst SignUpLogin = () => {\n  const [alreadyMember, setAlreadyMember] = useState(false);\n  const history = useHistory();\n  const userkit = new UserKit();\n  const searchString = history.location.search;\n  const urlParameters = new URLSearchParams(searchString);\n  let uid = urlParameters.get(\"uid\");\n  let token = urlParameters.get(\"token\");\n\n  const handleActivate = () => {};\n\n  const form = () => {\n    if (alreadyMember) {\n      return /*#__PURE__*/React.createElement(SignUpLoginForm, {\n        type: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SignUpLoginForm, {\n        type: \"register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setAlreadyMember(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, \"already a member?\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, uid && token ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleActivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Activate User\") : form());\n};\n\nexport default SignUpLogin;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/pages/SignUpLogin.jsx"],"names":["React","useState","useHistory","SignUpLoginForm","UserKit","SignUpLogin","alreadyMember","setAlreadyMember","history","userkit","searchString","location","search","urlParameters","URLSearchParams","uid","get","token","handleActivate","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AACA,QAAMM,YAAY,GAAGF,OAAO,CAACG,QAAR,CAAiBC,MAAtC;AAEA,QAAMC,aAAa,GAAG,IAAIC,eAAJ,CAAoBJ,YAApB,CAAtB;AACA,MAAIK,GAAG,GAAGF,aAAa,CAACG,GAAd,CAAkB,KAAlB,CAAV;AACA,MAAIC,KAAK,GAAGJ,aAAa,CAACG,GAAd,CAAkB,OAAlB,CAAZ;;AAEA,QAAME,cAAc,GAAG,MAAM,CAAE,CAA/B;;AACA,QAAMC,IAAI,GAAG,MAAM;AACjB,QAAIb,aAAJ,EAAmB;AACjB,0BAAO,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EACsC,GADtC,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAQD;AACF,GAbD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,GAAG,IAAIE,KAAP,gBACC;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAGCC,IAAI,EAJR,CADF;AASD,CAlCD;;AAoCA,eAAed,WAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport SignUpLoginForm from \"../containers/SignUpLoginForm\"\nimport UserKit from \"../data/UserKit\"\n\nconst SignUpLogin = () => {\n  const [alreadyMember, setAlreadyMember] = useState(false)\n  const history = useHistory()\n  const userkit = new UserKit()\n  const searchString = history.location.search\n\n  const urlParameters = new URLSearchParams(searchString)\n  let uid = urlParameters.get(\"uid\")\n  let token = urlParameters.get(\"token\")\n\n  const handleActivate = () => {}\n  const form = () => {\n    if (alreadyMember) {\n      return <SignUpLoginForm type=\"login\" />\n    } else {\n      return (\n        <div>\n          <SignUpLoginForm type=\"register\" />{\" \"}\n          <button onClick={() => setAlreadyMember(true)}>\n            already a member?\n          </button>\n        </div>\n      )\n    }\n  }\n  return (\n    <div>\n      {uid && token ? (\n        <button onClick={handleActivate}>Activate User</button>\n      ) : (\n        form()\n      )}\n    </div>\n  )\n}\n\nexport default SignUpLogin\n"]},"metadata":{},"sourceType":"module"}