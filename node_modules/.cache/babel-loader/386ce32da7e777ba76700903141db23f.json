{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/UserContext.jsx\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport UserKit from \"./data/UserKit\";\nexport const UserContext = createContext(); // auth wraps the entire app giving currentUser as context\n\nconst User = ({\n  children\n}) => {\n  const userKit = new UserKit();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [customerList, setCustomerList] = useState(null);\n  const [customerListUpdated, setCustomerListUpdated] = useState(false);\n  useEffect(() => {\n    userKit.getSessionToken() && userKit.getCurrentUser().then(res => res.json()).then(data => setCurrentUser(data));\n  }, []);\n  useEffect(() => {\n    userKit.getCustomers().then(res => res.json()).then(data => setCustomerList(data.results));\n  }, []);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser,\n      setCustomerListUpdated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/UserContext.jsx"],"names":["React","useState","useEffect","createContext","UserKit","UserContext","User","children","userKit","currentUser","setCurrentUser","customerList","setCustomerList","customerListUpdated","setCustomerListUpdated","getSessionToken","getCurrentUser","then","res","json","data","getCustomers","results"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC,C,CAEP;;AACA,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACO,eAAR,MACEP,OAAO,CACJQ,cADH,GAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSG,IAAD,IAAUV,cAAc,CAACU,IAAD,CAHhC,CADF;AAKD,GANQ,EAMN,EANM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CACJa,YADH,GAEGJ,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSG,IAAD,IAAUR,eAAe,CAACQ,IAAI,CAACE,OAAN,CAHjC;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEb,MAAAA,WAAF;AAAeC,MAAAA,cAAf;AAA+BI,MAAAA;AAA/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGP,QAHH,CADF;AAOD,CA3BD;;AA4BA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\"\nimport UserKit from \"./data/UserKit\"\n\nexport const UserContext = createContext()\n\n// auth wraps the entire app giving currentUser as context\nconst User = ({ children }) => {\n  const userKit = new UserKit()\n  const [currentUser, setCurrentUser] = useState(null)\n  const [customerList, setCustomerList] = useState(null)\n  const [customerListUpdated, setCustomerListUpdated] = useState(false)\n\n  useEffect(() => {\n    userKit.getSessionToken() &&\n      userKit\n        .getCurrentUser()\n        .then((res) => res.json())\n        .then((data) => setCurrentUser(data))\n  }, [])\n  useEffect(() => {\n    userKit\n      .getCustomers()\n      .then((res) => res.json())\n      .then((data) => setCustomerList(data.results))\n  }, [])\n\n  return (\n    <UserContext.Provider\n      value={{ currentUser, setCurrentUser, setCustomerListUpdated }}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\nexport default User\n"]},"metadata":{},"sourceType":"module"}