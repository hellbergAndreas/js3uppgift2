{"ast":null,"code":"export default class {\n  constructor() {\n    this.login = [{\n      name: \"email\",\n      input: \"input\",\n      type: \"input\",\n      label: \"email\",\n      validateEmail: true\n    }, {\n      name: \"password\",\n      input: \"input\",\n      type: \"password\",\n      required: true\n    }];\n    this.register = [{\n      name: \"firstName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"lastName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"email\",\n      input: \"input\",\n      type: \"input\",\n      label: \"email\"\n    }, {\n      name: \"password\",\n      input: \"input\",\n      type: \"password\",\n      required: true\n    }, {\n      name: \"organisationName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationKind\",\n      input: \"select\",\n      required: true,\n      options: [1, 2, 3]\n    }];\n    this.customer = [{\n      name: \"name\",\n      label: \"name\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationNr\",\n      label: \"Organisation number\",\n      input: \"input\"\n    }, {\n      name: \"vatNr\",\n      label: \"Vat number\",\n      input: \"input\",\n      validateVat: true\n    }, {\n      name: \"reference\",\n      label: \"Reference\",\n      input: \"input\"\n    }, {\n      name: \"paymentTerm\",\n      label: \"Payment term\",\n      input: \"input\",\n      required: true,\n      type: \"number\"\n    }, {\n      name: \"website\",\n      label: \"Website\",\n      input: \"input\"\n    }, {\n      name: \"email\",\n      input: \"input\",\n      type: \"input\",\n      label: \"email\"\n    }, {\n      name: \"phoneNumber\",\n      label: \"Phone number\",\n      input: \"input\"\n    }];\n    this.errorMessages = [];\n\n    this.validate = (type, fieldValues, setErrorMessage) => {\n      let canSubmit = true;\n      const form = this[type];\n      form.forEach(field => {\n        if (field.validateEmail) {\n          this.validateEmail(field, fieldValues);\n        }\n\n        if (field.validateVat) {\n          this.validateVat(field, fieldValues);\n        }\n\n        if (field.required && fieldValues[field.name].length === 0) {\n          this.errorMessages.push({\n            [field.name]: \"this field is required\"\n          });\n        }\n      });\n\n      if (this.errorMessages.length === 0) {\n        return canSubmit;\n      } else {\n        setErrorMessage({});\n        this.errorMessages.forEach(error => {\n          setErrorMessage(prevState => {\n            return { ...prevState,\n              ...error\n            };\n          });\n        });\n      }\n    };\n  }\n\n  validateEmail(field, fieldValues) {\n    const re = /\\S+@\\S+\\.\\S+/;\n\n    if (!re.test(fieldValues[field.name])) {\n      this.errorMessages.push({\n        [field.name]: \"please enter a valid email\"\n      });\n    }\n  }\n\n  validateVat(field, fieldValues) {\n    const re = /^(SE)(\\d{10}01$)/i;\n    console.log(fieldValues[field.name]);\n\n    if (!re.test(fieldValues[field.name])) {\n      this.errorMessages.push({\n        [field.name]: \"please enter a valid vat\"\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/data/FormKit.js"],"names":["login","name","input","type","label","validateEmail","required","register","options","customer","validateVat","errorMessages","validate","fieldValues","setErrorMessage","canSubmit","form","forEach","field","length","push","error","prevState","re","test","console","log"],"mappings":"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","sourcesContent":["export default class {\n  login = [\n    {\n      name: \"email\",\n      input: \"input\",\n      type: \"input\",\n      label: \"email\",\n      validateEmail: true,\n    },\n    { name: \"password\", input: \"input\", type: \"password\", required: true },\n  ]\n\n  register = [\n    { name: \"firstName\", input: \"input\", required: true },\n    { name: \"lastName\", input: \"input\", required: true },\n    { name: \"email\", input: \"input\", type: \"input\", label: \"email\" },\n\n    { name: \"password\", input: \"input\", type: \"password\", required: true },\n    { name: \"organisationName\", input: \"input\", required: true },\n    {\n      name: \"organisationKind\",\n      input: \"select\",\n      required: true,\n      options: [1, 2, 3],\n    },\n  ]\n\n  customer = [\n    { name: \"name\", label: \"name\", input: \"input\", required: true },\n    { name: \"organisationNr\", label: \"Organisation number\", input: \"input\" },\n    { name: \"vatNr\", label: \"Vat number\", input: \"input\", validateVat: true },\n    { name: \"reference\", label: \"Reference\", input: \"input\" },\n    {\n      name: \"paymentTerm\",\n      label: \"Payment term\",\n      input: \"input\",\n      required: true,\n      type: \"number\",\n    },\n    { name: \"website\", label: \"Website\", input: \"input\" },\n    { name: \"email\", input: \"input\", type: \"input\", label: \"email\" },\n    { name: \"phoneNumber\", label: \"Phone number\", input: \"input\" },\n  ]\n  errorMessages = []\n\n  validateEmail(field, fieldValues) {\n    const re = /\\S+@\\S+\\.\\S+/\n    if (!re.test(fieldValues[field.name])) {\n      this.errorMessages.push({ [field.name]: \"please enter a valid email\" })\n    }\n  }\n  validateVat(field, fieldValues) {\n    const re = /^(SE)(\\d{10}01$)/i\n    console.log(fieldValues[field.name])\n    if (!re.test(fieldValues[field.name])) {\n      this.errorMessages.push({ [field.name]: \"please enter a valid vat\" })\n    }\n  }\n  validate = (type, fieldValues, setErrorMessage) => {\n    let canSubmit = true\n    const form = this[type]\n\n    form.forEach((field) => {\n      if (field.validateEmail) {\n        this.validateEmail(field, fieldValues)\n      }\n      if (field.validateVat) {\n        this.validateVat(field, fieldValues)\n      }\n      if (field.required && fieldValues[field.name].length === 0) {\n        this.errorMessages.push({ [field.name]: \"this field is required\" })\n      }\n    })\n\n    if (this.errorMessages.length === 0) {\n      return canSubmit\n    } else {\n      setErrorMessage({})\n      this.errorMessages.forEach((error) => {\n        setErrorMessage((prevState) => {\n          return {\n            ...prevState,\n            ...error,\n          }\n        })\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}