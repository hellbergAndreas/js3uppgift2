{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/containers/SignUpLoginForm.jsx\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Input from \"../components/Input\";\nimport SelectInput from \"../components/SelectInput\";\nimport FormKit from \"../data/FormKit\";\nimport UserKit from \"../data/UserKit\";\n\nconst SignUpLoginForm = ({\n  type\n}) => {\n  const userKit = new UserKit();\n  const formKit = new FormKit();\n  const [user, setUser] = useState();\n  useEffect(() => {\n    let loginForm = formKit[type]();\n    let initialUserState = loginForm.reduce((acc, cur) => {\n      return { ...acc,\n        [cur.name]: \"\"\n      };\n    }, {});\n    setUser(initialUserState);\n    console.log(user);\n  }, []);\n\n  const handleChange = (name, value) => {\n    setUser(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    type === \"register\" && userKit.register(user);\n    type === \"login\" && userKit.login(user).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, user && formKit[type]().map(field => {\n    if (field.type === \"input\") {\n      return /*#__PURE__*/React.createElement(Input, {\n        name: field.name,\n        label: field.name,\n        value: user[field.name],\n        handleChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      });\n    }\n\n    if (field.type === \"select\") {\n      return /*#__PURE__*/React.createElement(SelectInput, {\n        name: field.name,\n        label: field.name,\n        value: user[field.name],\n        handleChange: handleChange,\n        options: field.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      });\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, type)); // return (\n  //   <form>\n  //     {type === \"register\" && (\n  //       <div>\n  //         <Input\n  //           handleChange={handleChange}\n  //           label=\"first name\"\n  //           name=\"firstName\"\n  //           value={user}\n  //         ></Input>\n  //         <Input\n  //           handleChange={handleChange}\n  //           label=\"last name\"\n  //           name=\"lastName\"\n  //           value={user}\n  //         ></Input>\n  //       </div>\n  //     )}\n  //     <Input\n  //       handleChange={handleChange}\n  //       label=\"email\"\n  //       name=\"email\"\n  //       value={user}\n  //     ></Input>\n  //     <Input\n  //       handleChange={handleChange}\n  //       label=\"password\"\n  //       name=\"password\"\n  //       value={user}\n  //     ></Input>\n  //     {type === \"register\" && (\n  //       <div>\n  //         <Input\n  //           handleChange={handleChange}\n  //           label=\"organisation name\"\n  //           name=\"organisationName\"\n  //           value={user}\n  //         ></Input>\n  //         <SelectInput\n  //           handleChange={handleChange}\n  //           label=\"organisation kind\"\n  //           name=\"organisationKind\"\n  //           type=\"select\"\n  //           value={user}\n  //         ></SelectInput>\n  //       </div>\n  //     )}\n  //     <button onClick={(e) => handleSubmit(e)}>{type}</button>\n  //   </form>\n  // )\n};\n\nexport default SignUpLoginForm;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/containers/SignUpLoginForm.jsx"],"names":["React","useState","useEffect","Input","SelectInput","FormKit","UserKit","SignUpLoginForm","type","userKit","formKit","user","setUser","loginForm","initialUserState","reduce","acc","cur","name","console","log","handleChange","value","prevState","handleSubmit","e","preventDefault","register","login","then","res","json","data","map","field","options"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport Input from \"../components/Input\"\nimport SelectInput from \"../components/SelectInput\"\nimport FormKit from \"../data/FormKit\"\nimport UserKit from \"../data/UserKit\"\n\nconst SignUpLoginForm = ({ type }) => {\n  const userKit = new UserKit()\n  const formKit = new FormKit()\n  const [user, setUser] = useState()\n\n  useEffect(() => {\n    let loginForm = formKit[type]()\n    let initialUserState = loginForm.reduce((acc, cur) => {\n      return {\n        ...acc,\n        [cur.name]: \"\",\n      }\n    }, {})\n    setUser(initialUserState)\n    console.log(user)\n  }, [])\n\n  const handleChange = (name, value) => {\n    setUser((prevState) => {\n      return {\n        ...prevState,\n        [name]: value,\n      }\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    type === \"register\" && userKit.register(user)\n    type === \"login\" &&\n      userKit\n        .login(user)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data)\n        })\n  }\n\n  return (\n    <form>\n      {user &&\n        formKit[type]().map((field) => {\n          if (field.type === \"input\") {\n            return (\n              <Input\n                name={field.name}\n                label={field.name}\n                value={user[field.name]}\n                handleChange={handleChange}\n              ></Input>\n            )\n          }\n          if (field.type === \"select\") {\n            return (\n              <SelectInput\n                name={field.name}\n                label={field.name}\n                value={user[field.name]}\n                handleChange={handleChange}\n                options={field.options}\n              ></SelectInput>\n            )\n          }\n        })}\n      <button onClick={(e) => handleSubmit(e)}>{type}</button>\n    </form>\n  )\n\n  // return (\n  //   <form>\n  //     {type === \"register\" && (\n  //       <div>\n  //         <Input\n  //           handleChange={handleChange}\n  //           label=\"first name\"\n  //           name=\"firstName\"\n  //           value={user}\n  //         ></Input>\n  //         <Input\n  //           handleChange={handleChange}\n  //           label=\"last name\"\n  //           name=\"lastName\"\n  //           value={user}\n  //         ></Input>\n  //       </div>\n  //     )}\n  //     <Input\n  //       handleChange={handleChange}\n  //       label=\"email\"\n  //       name=\"email\"\n  //       value={user}\n  //     ></Input>\n  //     <Input\n  //       handleChange={handleChange}\n  //       label=\"password\"\n  //       name=\"password\"\n  //       value={user}\n  //     ></Input>\n  //     {type === \"register\" && (\n  //       <div>\n  //         <Input\n  //           handleChange={handleChange}\n  //           label=\"organisation name\"\n  //           name=\"organisationName\"\n  //           value={user}\n  //         ></Input>\n  //         <SelectInput\n  //           handleChange={handleChange}\n  //           label=\"organisation kind\"\n  //           name=\"organisationKind\"\n  //           type=\"select\"\n  //           value={user}\n  //         ></SelectInput>\n  //       </div>\n  //     )}\n  //     <button onClick={(e) => handleSubmit(e)}>{type}</button>\n  //   </form>\n  // )\n}\n\nexport default SignUpLoginForm\n"]},"metadata":{},"sourceType":"module"}