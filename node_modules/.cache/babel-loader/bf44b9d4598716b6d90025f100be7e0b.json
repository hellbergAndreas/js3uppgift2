{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/UserContext.jsx\";\nimport React, { useState, useEffect, createContext } from \"react\";\nimport UserKit from \"./data/UserKit\";\nexport const UserContext = createContext(); // the User component wraps  all other components and\n// passes the UserContext to them. The userContext is\n// both user personal information and the users customer-list\n\nconst User = ({\n  children\n}) => {\n  const userKit = new UserKit();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [customerList, setCustomerList] = useState(null);\n  const [triggerListUpdate, setTriggerListUpdate] = useState(true);\n  useEffect(() => {\n    userKit.getCustomers().then(res => res.json()).then(data => {\n      setCustomerList(data.results);\n    });\n  }, [triggerListUpdate]);\n  useEffect(() => {\n    if (userKit.getSessionToken()) {\n      userKit.getCurrentUser().then(res => res.json()).then(data => {\n        if (data.id) {\n          setCurrentUser(data);\n        }\n      });\n    }\n  }, [loggedIn]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser,\n      customerList,\n      setCustomerList,\n      triggerListUpdate,\n      setTriggerListUpdate,\n      loggedIn,\n      setLoggedIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/UserContext.jsx"],"names":["React","useState","useEffect","createContext","UserKit","UserContext","User","children","userKit","currentUser","setCurrentUser","loggedIn","setLoggedIn","customerList","setCustomerList","triggerListUpdate","setTriggerListUpdate","getCustomers","then","res","json","data","results","getSessionToken","getCurrentUser","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC,C,CACP;AACA;AACA;;AAEA,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAAC,IAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CACJS,YADH,GAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSG,IAAD,IAAU;AACdP,MAAAA,eAAe,CAACO,IAAI,CAACC,OAAN,CAAf;AACD,KALH;AAMD,GAPQ,EAON,CAACP,iBAAD,CAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAO,CAACe,eAAR,EAAJ,EAA+B;AAC7Bf,MAAAA,OAAO,CACJgB,cADH,GAEGN,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSG,IAAD,IAAU;AACd,YAAIA,IAAI,CAACI,EAAT,EAAa;AACXf,UAAAA,cAAc,CAACW,IAAD,CAAd;AACD;AACF,OAPH;AAQD;AACF,GAXQ,EAWN,CAACV,QAAD,CAXM,CAAT;AAaA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,WADK;AAELC,MAAAA,cAFK;AAGLG,MAAAA,YAHK;AAILC,MAAAA,eAJK;AAKLC,MAAAA,iBALK;AAMLC,MAAAA,oBANK;AAOLL,MAAAA,QAPK;AAQLC,MAAAA;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGL,QAZH,CADF;AAgBD,CA7CD;;AA8CA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\"\n\nimport UserKit from \"./data/UserKit\"\n\nexport const UserContext = createContext()\n// the User component wraps  all other components and\n// passes the UserContext to them. The userContext is\n// both user personal information and the users customer-list\n\nconst User = ({ children }) => {\n  const userKit = new UserKit()\n  const [currentUser, setCurrentUser] = useState(null)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [customerList, setCustomerList] = useState(null)\n  const [triggerListUpdate, setTriggerListUpdate] = useState(true)\n\n  useEffect(() => {\n    userKit\n      .getCustomers()\n      .then((res) => res.json())\n      .then((data) => {\n        setCustomerList(data.results)\n      })\n  }, [triggerListUpdate])\n\n  useEffect(() => {\n    if (userKit.getSessionToken()) {\n      userKit\n        .getCurrentUser()\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.id) {\n            setCurrentUser(data)\n          }\n        })\n    }\n  }, [loggedIn])\n\n  return (\n    <UserContext.Provider\n      value={{\n        currentUser,\n        setCurrentUser,\n        customerList,\n        setCustomerList,\n        triggerListUpdate,\n        setTriggerListUpdate,\n        loggedIn,\n        setLoggedIn,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\nexport default User\n"]},"metadata":{},"sourceType":"module"}