{"ast":null,"code":"export default class {\n  constructor() {\n    this.login = [{\n      name: \"email\",\n      input: \"input\",\n      required: true,\n      type: \"input\"\n    }, {\n      name: \"password\",\n      input: \"input\",\n      required: true,\n      type: \"password\"\n    }];\n    this.register = [{\n      name: \"firstName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"lastName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"email\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"password\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationName\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationKind\",\n      input: \"select\",\n      required: true,\n      options: [1, 2, 3]\n    }];\n    this.customer = [{\n      name: \"name\",\n      input: \"input\",\n      required: true\n    }, {\n      name: \"organisationNr\",\n      input: \"input\"\n    }, {\n      name: \"vatNr\",\n      input: \"input\"\n    }, {\n      name: \"reference\",\n      input: \"input\"\n    }, {\n      name: \"paymentTerm\",\n      input: \"input\",\n      required: true,\n      type: \"number\"\n    }, {\n      name: \"website\",\n      input: \"input\"\n    }, {\n      name: \"email\",\n      input: \"input\"\n    }, {\n      name: \"phoneNumber\",\n      input: \"input\"\n    }];\n\n    this.validate = (type, fieldValues, setErrorMessage) => {\n      let canSubmit = false;\n      const form = this[type];\n      console.log(form);\n      form.forEach(field => {\n        if (field.required && fieldValues[field.name].length === 0) {\n          setErrorMessage(prevState => {\n            return { ...prevState,\n              [field.name]: \"this field is required\"\n            };\n          });\n        } else {\n          canSubmit = true;\n        }\n      });\n      console.log(canSubmit);\n      return canSubmit;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/data/FormKit.js"],"names":["login","name","input","required","type","register","options","customer","validate","fieldValues","setErrorMessage","canSubmit","form","console","log","forEach","field","length","prevState"],"mappings":"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","sourcesContent":["export default class {\n  login = [\n    { name: \"email\", input: \"input\", required: true, type: \"input\" },\n    { name: \"password\", input: \"input\", required: true, type: \"password\" },\n  ]\n\n  register = [\n    { name: \"firstName\", input: \"input\", required: true },\n    { name: \"lastName\", input: \"input\", required: true },\n    { name: \"email\", input: \"input\", required: true },\n    { name: \"password\", input: \"input\", required: true },\n    { name: \"organisationName\", input: \"input\", required: true },\n    {\n      name: \"organisationKind\",\n      input: \"select\",\n      required: true,\n      options: [1, 2, 3],\n    },\n  ]\n\n  customer = [\n    { name: \"name\", input: \"input\", required: true },\n    { name: \"organisationNr\", input: \"input\" },\n    { name: \"vatNr\", input: \"input\" },\n    { name: \"reference\", input: \"input\" },\n    { name: \"paymentTerm\", input: \"input\", required: true, type: \"number\" },\n    { name: \"website\", input: \"input\" },\n    { name: \"email\", input: \"input\" },\n    { name: \"phoneNumber\", input: \"input\" },\n  ]\n\n  validate = (type, fieldValues, setErrorMessage) => {\n    let canSubmit = false\n    const form = this[type]\n    console.log(form)\n    form.forEach((field) => {\n      if (field.required && fieldValues[field.name].length === 0) {\n        setErrorMessage((prevState) => {\n          return {\n            ...prevState,\n            [field.name]: \"this field is required\",\n          }\n        })\n      } else {\n        canSubmit = true\n      }\n    })\n    console.log(canSubmit)\n    return canSubmit\n  }\n}\n"]},"metadata":{},"sourceType":"module"}