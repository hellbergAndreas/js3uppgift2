{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/pages/SignUpLogin.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TheForm from \"../containers/TheForm\";\nimport UserKit from \"../data/UserKit\";\nimport styled from \"styled-components\"; // by default TheForm is rendered with \"register\"-settings,\n// if alreadyMember is true, TheForm will render with \"Login\"-settings\n// if user comes from the activation-email,\n// uid and token will be set and \"activate-button\" renders.\n// when pressed, alreadyMember is set to true and login form will render\n\nconst SignUpLogin = () => {\n  const [alreadyMember, setAlreadyMember] = useState(false);\n  const [activationTokens, setActivationTokens] = useState({});\n  const history = useHistory();\n  const userkit = new UserKit();\n  const searchString = history.location.search;\n  const urlParameters = new URLSearchParams(searchString);\n  useEffect(() => {\n    let uid = urlParameters.get(\"uid\");\n    let token = urlParameters.get(\"token\");\n    setActivationTokens({\n      uid,\n      token\n    });\n  }, []);\n\n  const handleActivate = () => {\n    userkit.activateUser(activationTokens.uid, activationTokens.token);\n    setActivationTokens({});\n    setAlreadyMember(true);\n  };\n\n  const form = () => {\n    if (alreadyMember) {\n      return /*#__PURE__*/React.createElement(TheForm, {\n        submit: \"Login\",\n        type: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TheForm, {\n        submit: \"Register\",\n        type: \"register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(StyledButton, {\n        onClick: () => setAlreadyMember(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Already a member?\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledCard, {\n    alreadyMember: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, activationTokens.uid && activationTokens.token ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleActivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Activate User\") : form()));\n};\n\nexport default SignUpLogin;\nconst StyledCard = styled.div`\n  width: 400px;\n  padding: 70px 170px;\n\n  border-radius: 8px;\n  box-shadow: 10px 10px 26px -5px rgba(0, 0, 0, 0.21);\n  max-height: ${props => props.alreadyMember ? \"1000px\" : \"400px\"};\n`;\nconst StyledSection = styled.section`\n  width: 20px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 5%;\n`;\nexport const StyledButton = styled.button`\n  height: 40px;\n  width: 155px;\n  margin-top: 10px;\n  background-color: white;\n  border-radius: 5px;\n  font-weight: bold;\n  border: 1px solid rgba(182, 209, 255);\n  background-color: #4373d9;\n  color: white;\n  &:hover {\n    background-color: #6d96ed;\n    font-size: 15px;\n    width: 158px;\n    height: 43px;\n  }\n`;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/pages/SignUpLogin.jsx"],"names":["React","useEffect","useState","useHistory","TheForm","UserKit","styled","SignUpLogin","alreadyMember","setAlreadyMember","activationTokens","setActivationTokens","history","userkit","searchString","location","search","urlParameters","URLSearchParams","uid","get","token","handleActivate","activateUser","form","StyledCard","div","props","StyledSection","section","StyledButton","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,OAAO,GAAG,IAAIR,OAAJ,EAAhB;AACA,QAAMS,YAAY,GAAGF,OAAO,CAACG,QAAR,CAAiBC,MAAtC;AAEA,QAAMC,aAAa,GAAG,IAAIC,eAAJ,CAAoBJ,YAApB,CAAtB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,GAAG,GAAGF,aAAa,CAACG,GAAd,CAAkB,KAAlB,CAAV;AACA,QAAIC,KAAK,GAAGJ,aAAa,CAACG,GAAd,CAAkB,OAAlB,CAAZ;AACAT,IAAAA,mBAAmB,CAAC;AAAEQ,MAAAA,GAAF;AAAOE,MAAAA;AAAP,KAAD,CAAnB;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,cAAc,GAAG,MAAM;AAC3BT,IAAAA,OAAO,CAACU,YAAR,CAAqBb,gBAAgB,CAACS,GAAtC,EAA2CT,gBAAgB,CAACW,KAA5D;AACAV,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAF,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAJD;;AAKA,QAAMe,IAAI,GAAG,MAAM;AACjB,QAAIhB,aAAJ,EAAmB;AACjB,0BAAO,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAC,OAAhB;AAAwB,QAAA,IAAI,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAC,UAAhB;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EACgD,GADhD,eAEE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,IAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAQD;AACF,GAbD;;AAcA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,aAAa,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBAAgB,CAACS,GAAjB,IAAwBT,gBAAgB,CAACW,KAAzC,gBACC;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAGCE,IAAI,EAJR,CADF,CADF;AAWD,CA7CD;;AA+CA,eAAejB,WAAf;AAEA,MAAMkB,UAAU,GAAGnB,MAAM,CAACoB,GAAI;;;;;;gBAMbC,KAAD,IAAYA,KAAK,CAACnB,aAAN,GAAsB,QAAtB,GAAiC,OAAS;CANtE;AAQA,MAAMoB,aAAa,GAAGtB,MAAM,CAACuB,OAAQ;;;;;;CAArC;AAOA,OAAO,MAAMC,YAAY,GAAGxB,MAAM,CAACyB,MAAO;;;;;;;;;;;;;;;;CAAnC","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport TheForm from \"../containers/TheForm\"\nimport UserKit from \"../data/UserKit\"\nimport styled from \"styled-components\"\n\n// by default TheForm is rendered with \"register\"-settings,\n// if alreadyMember is true, TheForm will render with \"Login\"-settings\n// if user comes from the activation-email,\n// uid and token will be set and \"activate-button\" renders.\n// when pressed, alreadyMember is set to true and login form will render\nconst SignUpLogin = () => {\n  const [alreadyMember, setAlreadyMember] = useState(false)\n  const [activationTokens, setActivationTokens] = useState({})\n\n  const history = useHistory()\n  const userkit = new UserKit()\n  const searchString = history.location.search\n\n  const urlParameters = new URLSearchParams(searchString)\n  useEffect(() => {\n    let uid = urlParameters.get(\"uid\")\n    let token = urlParameters.get(\"token\")\n    setActivationTokens({ uid, token })\n  }, [])\n\n  const handleActivate = () => {\n    userkit.activateUser(activationTokens.uid, activationTokens.token)\n    setActivationTokens({})\n    setAlreadyMember(true)\n  }\n  const form = () => {\n    if (alreadyMember) {\n      return <TheForm submit=\"Login\" type=\"login\" />\n    } else {\n      return (\n        <div>\n          <TheForm submit=\"Register\" type=\"register\" />{\" \"}\n          <StyledButton onClick={() => setAlreadyMember(true)}>\n            Already a member?\n          </StyledButton>\n        </div>\n      )\n    }\n  }\n  return (\n    <StyledSection>\n      <StyledCard alreadyMember>\n        {activationTokens.uid && activationTokens.token ? (\n          <button onClick={handleActivate}>Activate User</button>\n        ) : (\n          form()\n        )}\n      </StyledCard>\n    </StyledSection>\n  )\n}\n\nexport default SignUpLogin\n\nconst StyledCard = styled.div`\n  width: 400px;\n  padding: 70px 170px;\n\n  border-radius: 8px;\n  box-shadow: 10px 10px 26px -5px rgba(0, 0, 0, 0.21);\n  max-height: ${(props) => (props.alreadyMember ? \"1000px\" : \"400px\")};\n`\nconst StyledSection = styled.section`\n  width: 20px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 5%;\n`\nexport const StyledButton = styled.button`\n  height: 40px;\n  width: 155px;\n  margin-top: 10px;\n  background-color: white;\n  border-radius: 5px;\n  font-weight: bold;\n  border: 1px solid rgba(182, 209, 255);\n  background-color: #4373d9;\n  color: white;\n  &:hover {\n    background-color: #6d96ed;\n    font-size: 15px;\n    width: 158px;\n    height: 43px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}