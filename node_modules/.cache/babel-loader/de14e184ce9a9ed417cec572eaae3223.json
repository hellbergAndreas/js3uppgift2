{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/skolan/inla\\u0308mining2/uppgift2/src/pages/SignUpLogin.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TheForm from \"../containers/TheForm\";\nimport UserKit from \"../data/UserKit\"; // user can decide on sign-up or login-form with the \"already member\" button\n// if user comes from the activation-email, uid and token will be set and \"activate-button renders\"\n// when pressed, alreadyMember is set to true, and login form will render\n\nconst SignUpLogin = () => {\n  const [alreadyMember, setAlreadyMember] = useState(false);\n  const [activationTokens, setActivationTokens] = useState({});\n  const history = useHistory();\n  const userkit = new UserKit();\n  const searchString = history.location.search;\n  const urlParameters = new URLSearchParams(searchString);\n  useEffect(() => {\n    let uid = urlParameters.get(\"uid\");\n    let token = urlParameters.get(\"token\");\n    setActivationTokens({\n      uid,\n      token\n    });\n  }, []);\n\n  const handleActivate = () => {\n    userkit.activateUser(activationTokens.uid, activationTokens.token);\n    setActivationTokens({});\n    setAlreadyMember(true);\n  };\n\n  const form = () => {\n    if (alreadyMember) {\n      return /*#__PURE__*/React.createElement(TheForm, {\n        submit: \"login\",\n        type: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TheForm, {\n        submit: \"register\",\n        type: \"register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setAlreadyMember(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"already a member?\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, activationTokens.uid && activationTokens.token ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleActivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Activate User\") : form());\n};\n\nexport default SignUpLogin;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/skolan/inlaÌˆmining2/uppgift2/src/pages/SignUpLogin.jsx"],"names":["React","useEffect","useState","useHistory","TheForm","UserKit","SignUpLogin","alreadyMember","setAlreadyMember","activationTokens","setActivationTokens","history","userkit","searchString","location","search","urlParameters","URLSearchParams","uid","get","token","handleActivate","activateUser","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMS,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACA,QAAMQ,YAAY,GAAGF,OAAO,CAACG,QAAR,CAAiBC,MAAtC;AAEA,QAAMC,aAAa,GAAG,IAAIC,eAAJ,CAAoBJ,YAApB,CAAtB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,GAAG,GAAGF,aAAa,CAACG,GAAd,CAAkB,KAAlB,CAAV;AACA,QAAIC,KAAK,GAAGJ,aAAa,CAACG,GAAd,CAAkB,OAAlB,CAAZ;AACAT,IAAAA,mBAAmB,CAAC;AAAEQ,MAAAA,GAAF;AAAOE,MAAAA;AAAP,KAAD,CAAnB;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,cAAc,GAAG,MAAM;AAC3BT,IAAAA,OAAO,CAACU,YAAR,CAAqBb,gBAAgB,CAACS,GAAtC,EAA2CT,gBAAgB,CAACW,KAA5D;AACAV,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAF,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAJD;;AAKA,QAAMe,IAAI,GAAG,MAAM;AACjB,QAAIhB,aAAJ,EAAmB;AACjB,0BAAO,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAC,OAAhB;AAAwB,QAAA,IAAI,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAC,UAAhB;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EACgD,GADhD,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAQD;AACF,GAbD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBAAgB,CAACS,GAAjB,IAAwBT,gBAAgB,CAACW,KAAzC,gBACC;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAGCE,IAAI,EAJR,CADF;AASD,CA3CD;;AA6CA,eAAejB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport TheForm from \"../containers/TheForm\"\nimport UserKit from \"../data/UserKit\"\n\n// user can decide on sign-up or login-form with the \"already member\" button\n// if user comes from the activation-email, uid and token will be set and \"activate-button renders\"\n// when pressed, alreadyMember is set to true, and login form will render\nconst SignUpLogin = () => {\n  const [alreadyMember, setAlreadyMember] = useState(false)\n  const [activationTokens, setActivationTokens] = useState({})\n\n  const history = useHistory()\n  const userkit = new UserKit()\n  const searchString = history.location.search\n\n  const urlParameters = new URLSearchParams(searchString)\n  useEffect(() => {\n    let uid = urlParameters.get(\"uid\")\n    let token = urlParameters.get(\"token\")\n    setActivationTokens({ uid, token })\n  }, [])\n\n  const handleActivate = () => {\n    userkit.activateUser(activationTokens.uid, activationTokens.token)\n    setActivationTokens({})\n    setAlreadyMember(true)\n  }\n  const form = () => {\n    if (alreadyMember) {\n      return <TheForm submit=\"login\" type=\"login\" />\n    } else {\n      return (\n        <div>\n          <TheForm submit=\"register\" type=\"register\" />{\" \"}\n          <button onClick={() => setAlreadyMember(true)}>\n            already a member?\n          </button>\n        </div>\n      )\n    }\n  }\n  return (\n    <div>\n      {activationTokens.uid && activationTokens.token ? (\n        <button onClick={handleActivate}>Activate User</button>\n      ) : (\n        form()\n      )}\n    </div>\n  )\n}\n\nexport default SignUpLogin\n"]},"metadata":{},"sourceType":"module"}